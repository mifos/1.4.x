<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<!-- 
Copyright (c) 2005-2008 Grameen Foundation USA
1029 Vermont Avenue, NW, Suite 400, Washington DC 20005
All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing
permissions and limitations under the License.

See also http://www.apache.org/licenses/LICENSE-2.0.html for an
explanation of the license and how it is applied.
-->                            
<hibernate-mapping>
	<class name="org.mifos.application.cashconfirmationreport.BranchCashConfirmationReportBO"
		table="BATCH_BRANCH_CASH_CONFIRMATION_REPORT">
		<id name="branchCashConfirmationReportId" access="field"
			column="BRANCH_CASH_CONFIRMATION_REPORT_ID">
			<generator class="native" />
		</id>
		<property name="branchId" column="BRANCH_ID" type="short"
			access="field" />
		<property name="runDate" column="RUN_DATE" type="date"
			access="field" />

		<set name="centerRecoveries" cascade="all, delete-orphan" inverse="true" lazy="true" access="field">
			<key column="BRANCH_CASH_CONFIRMATION_REPORT_ID" not-null="true" />
			<one-to-many
				class="org.mifos.application.cashconfirmationreport.BranchCashConfirmationCenterRecoveryBO" />
		</set>
		<set name="centerIssues" cascade="all, delete-orphan" inverse="true" lazy="true" access="field">
			<key column="BRANCH_CASH_CONFIRMATION_REPORT_ID" not-null="true" />
			<one-to-many
				class="org.mifos.application.cashconfirmationreport.BranchCashConfirmationIssueBO" />
		</set>
		<set name="disbursements" cascade="all, delete-orphan" inverse="true" lazy="true" access="field">
			<key column="BRANCH_CASH_CONFIRMATION_REPORT_ID" not-null="true" />
			<one-to-many
				class="org.mifos.application.cashconfirmationreport.BranchCashConfirmationDisbursementBO" />
		</set>
	</class>
	<sql-query name="branchCashConfirmationReport.extractCenterRecovery">
		<return-scalar column="officeId" type="short"/>
		<return-scalar column="productOfferingName" type="string"/>
		<return-scalar column="due" type="big_decimal"/>
		<return-scalar column="actuals" type="big_decimal"/>
		<return-scalar column="arrears" type="big_decimal"/>
		<![CDATA[
			select acc.office_ID as officeId, po.PRD_OFFERING_NAME as productOfferingName, 
				ifnull(SUM(COALESCE(ls.PRINCIPAL     ,0)+COALESCE(ls.INTEREST     ,0)),0) as due,
				ifnull(SUM(COALESCE(ls.PRINCIPAL_PAID,0)+COALESCE(ls.INTEREST_PAID,0)),0) as actuals,
				0.0 as arrears
				from account acc, loan_account la, prd_offering po, loan_schedule ls, office o
				where la.ACCOUNT_ID = acc.ACCOUNT_ID
				and po.PRD_OFFERING_ID=la.PRD_OFFERING_ID
				and ls.account_id=acc.account_id
				and acc.office_id=o.office_id
				and o.office_level_id=:officeLevelId
				and acc.account_type_id=:accountTypeId 
				and ls.action_date=:actionDate
				and po.PRD_OFFERING_ID in (:productOfferingIds)
				and ls.PRINCIPAL_CURRENCY_ID=:currencyId
				and ls.INTEREST_CURRENCY_ID=:currencyId
				and ls.PRINCIPAL_PAID_CURRENCY_ID=:currencyId
				and ls.INTEREST_PAID_CURRENCY_ID=:currencyId
				group by po.PRD_OFFERING_ID, acc.office_id
		]]>
	</sql-query>
	
	<sql-query name="branchCashConfirmationReport.extractDisbursement">
		<return-scalar column="officeId" type="short"/>
		<return-scalar column="productOfferingName" type="string"/>
		<return-scalar column="actuals" type="big_decimal"/>
		<![CDATA[
			select acc.OFFICE_ID as officeId, po.PRD_OFFERING_NAME as productOfferingName, 
				ifnull(SUM(COALESCE(la.LOAN_AMOUNT,0)),0) as actuals 
				from account acc, loan_account la, prd_offering po, office o
				where la.ACCOUNT_ID = acc.ACCOUNT_ID
				and po.PRD_OFFERING_ID=la.PRD_OFFERING_ID
				and acc.office_id = o.office_id				
				and o.office_level_id=:officeLevelId
				and acc.account_type_id=:accountTypeId
				and la.disbursement_date=:disbursementDate
				and po.PRD_OFFERING_ID in (:productOfferingIds)
				and la.LOAN_AMOUNT_CURRENCY_ID=:currencyId
				group by po.PRD_OFFERING_ID, acc.OFFICE_ID
		]]>
	</sql-query>
	<query name="branchCashConfirmationReport.getReportForDate">
		<![CDATA[
			from org.mifos.application.cashconfirmationreport.BranchCashConfirmationReportBO branchReport 
				where branchReport.runDate=:RUN_DATE
		]]>
	</query>	
	<query name="branchCashConfirmationReport.getReportForDateAndBranch">
		<![CDATA[
			from org.mifos.application.cashconfirmationreport.BranchCashConfirmationReportBO branchReport 
				where branchReport.runDate=:RUN_DATE
				and branchReport.branchId = :BRANCH_ID
		]]>
	</query>	
</hibernate-mapping>
